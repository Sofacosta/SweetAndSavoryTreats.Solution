@{
  Layout = "_Layout";
}

@using SweetAndSavoryTreats.Models
@model SweetAndSavoryTreats.Models.Treat

<h1>Treat - @Html.DisplayFor(model => model.Name)</h1>

<hr>
<input type="button" class="btn btn-outline-success" value="Add flavors found in this treat" onclick="location.href='@Url.Action("AddFlavor", new { id = Model.TreatId })'">
<input type="button" class="btn btn-outline-warning" value="Edit treat" onclick="location.href='@Url.Action("Edit", new { id = Model.TreatId })'">
<input type="button" class="btn btn-outline-danger" value="Delete treat" onclick="location.href='@Url.Action("Delete", new { id = Model.TreatId })'">
<input type="button" class="btn btn-outline-primary" value="Back to list of treats" onclick="location.href='@Url.Action("Index")'">
<input type="button" class="btn btn-outline-primary" value="Home" onclick="location.href='@Url.Action("Index", "Home")'">
<hr>

@if(@Model.JoinEntities.Count == 0)
{
  <p>@Html.DisplayFor(model => model.Name) doesn't have any flavors listed.</p>
}
else
{
  <h3>@Html.DisplayFor(model => model.Name) has the flavors of:</h3>
  <ul>
  @foreach(FlavorTreat join in Model.JoinEntities)
  {
    <li><h4>@Html.ActionLink($"{join.Flavor.Name}", "Details", "Flavors", new { id = join.Flavor.FlavorId })</h4></li>
    @using (Html.BeginForm("DeleteFlavor", "Treats"))
    {
      @Html.Hidden("joinId", @join.FlavorTreatId)
      <input type="submit" class="btn btn-outline-danger btn-sm" value="Remove flavor">
    }
  }
  </ul>
}